{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { RouterEvent } from \"@angular/router\";\nexport let NavbarComponent = class NavbarComponent {\n  constructor(router, localStorageService) {\n    this.router = router;\n    this.localStorageService = localStorageService;\n    this.liLogout = document.querySelector('.liLogout');\n    this.isLogedIn = false;\n  }\n  ngOnInit() {\n    this.router.events.subscribe(val => {\n      if (val instanceof RouterEvent) {\n        if (val.url === '/login' || this.localStorageService.get('user') === null) {\n          this.isLogedIn = false;\n        } else {\n          this.isLogedIn = true;\n        }\n      }\n    });\n  }\n  logout() {\n    if (confirm('Are you sure you want to logout?')) {\n      this.localStorageService.remove('user');\n      this.router.navigate(['/login']).then();\n    }\n  }\n};\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);","map":{"version":3,"names":["Component","RouterEvent","NavbarComponent","constructor","router","localStorageService","liLogout","document","querySelector","isLogedIn","ngOnInit","events","subscribe","val","url","get","logout","confirm","remove","navigate","then","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\plataforma-ideias\\src\\app\\components\\shared\\navbar\\navbar.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router, RouterEvent} from \"@angular/router\";\nimport {User} from \"../../../../service/interfaces/user\";\nimport {LocalStorageService} from \"../../../../service/local-storage.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  liLogout: HTMLLIElement|null = document.querySelector('.liLogout');\n  isLogedIn:boolean = false;\n\n  constructor(private readonly router: Router,\n              private localStorageService: LocalStorageService) {\n\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe((val) => {\n      if (val instanceof RouterEvent) {\n        if (val.url === '/login' || this.localStorageService.get('user') === null) {\n          this.isLogedIn = false;\n        } else {\n          this.isLogedIn = true;\n        }\n      }\n    });\n  }\n\n  logout() {\n    if (confirm('Are you sure you want to logout?')){\n      this.localStorageService.remove('user');\n      this.router.navigate(['/login']).then();\n    }\n  }\n}\n\n\n\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAC/C,SAAgBC,WAAW,QAAO,iBAAiB;AAS5C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAA6BC,MAAc,EACvBC,mBAAwC;IAD/B,KAAAD,MAAM,GAANA,MAAM;IACf,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAJvC,KAAAC,QAAQ,GAAuBC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IAClE,KAAAC,SAAS,GAAW,KAAK;EAKzB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,MAAM,CAACO,MAAM,CAACC,SAAS,CAAEC,GAAG,IAAI;MACnC,IAAIA,GAAG,YAAYZ,WAAW,EAAE;QAC9B,IAAIY,GAAG,CAACC,GAAG,KAAK,QAAQ,IAAI,IAAI,CAACT,mBAAmB,CAACU,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;UACzE,IAAI,CAACN,SAAS,GAAG,KAAK;SACvB,MAAM;UACL,IAAI,CAACA,SAAS,GAAG,IAAI;;;IAG3B,CAAC,CAAC;EACJ;EAEAO,MAAMA,CAAA;IACJ,IAAIC,OAAO,CAAC,kCAAkC,CAAC,EAAC;MAC9C,IAAI,CAACZ,mBAAmB,CAACa,MAAM,CAAC,MAAM,CAAC;MACvC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAACC,IAAI,EAAE;;EAE3C;CACD;AA5BYlB,eAAe,GAAAmB,UAAA,EAL3BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWtB,eAAe,CA4B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}