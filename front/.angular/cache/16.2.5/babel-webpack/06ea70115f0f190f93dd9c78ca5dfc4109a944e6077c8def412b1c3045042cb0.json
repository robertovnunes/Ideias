{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass dataResponse {\n  constructor() {\n    this.message = '';\n    this.status_code = '';\n  }\n}\nexport class UserloginService {\n  constructor(http) {\n    this.http = http;\n    //private apiUrl = \"http://127.0.0.1:3000/users/username?username=\";\n    this.apiUrl = \"http://localhost:3000/users/1\";\n  }\n  getUser(value) {\n    let response = this.http.get(this.apiUrl.toString());\n    if (response === null) {\n      throw new Error('User not found');\n    }\n    return response;\n  }\n  static #_ = this.ɵfac = function UserloginService_Factory(t) {\n    return new (t || UserloginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserloginService,\n    factory: UserloginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["dataResponse","constructor","message","status_code","UserloginService","http","apiUrl","getUser","value","response","get","toString","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\plataforma-ideias\\src\\app\\service\\userlogin\\userlogin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user';\n\nimport { HttpClient } from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n\nclass dataResponse {\n  message = '';\n  status_code = '';\n  data!: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserloginService {\n  //private apiUrl = \"http://127.0.0.1:3000/users/username?username=\";\n  private apiUrl = \"http://localhost:3000/users/1\";\n  constructor(private http: HttpClient) { }\n\n  getUser(value: string | null){\n    let response = this.http.get<dataResponse>(this.apiUrl!.toString());\n    if (response === null) {\n      throw new Error('User not found');\n    }\n    return response;\n  }\n}\n"],"mappings":";;AAOA,MAAMA,YAAY;EAAlBC,YAAA;IACE,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,WAAW,GAAG,EAAE;EAElB;;AAKA,OAAM,MAAOC,gBAAgB;EAG3BH,YAAoBI,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB;IACQ,KAAAC,MAAM,GAAG,+BAA+B;EACR;EAExCC,OAAOA,CAACC,KAAoB;IAC1B,IAAIC,QAAQ,GAAG,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAe,IAAI,CAACJ,MAAO,CAACK,QAAQ,EAAE,CAAC;IACnE,IAAIF,QAAQ,KAAK,IAAI,EAAE;MACrB,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;;IAEnC,OAAOH,QAAQ;EACjB;EAAC,QAAAI,CAAA,G;qBAXUT,gBAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBd,gBAAgB;IAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}