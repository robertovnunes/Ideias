{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LocalStorageService {\n  constructor() {\n    this.storage = window.localStorage;\n  }\n  set(key, value) {\n    if (!this.storage) {\n      alert('Local storage not supported by your browser.');\n      return false;\n    } else {\n      this.storage.setItem(key, JSON.stringify(value));\n      return true;\n    }\n  }\n  get(key) {\n    if (this.storage) {\n      return JSON.parse(this.storage.getItem(key) || '{}');\n    }\n    return null;\n  }\n  remove(key) {\n    if (this.storage) {\n      this.storage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  clear() {\n    if (this.storage) {\n      this.storage.clear();\n      return true;\n    }\n    return false;\n  }\n  static #_ = this.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStorageService,\n    factory: LocalStorageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LocalStorageService","constructor","storage","window","localStorage","set","key","value","alert","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","clear","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\plataforma-ideias\\src\\app\\service\\local-storage.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {User} from \"./interfaces/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  private storage: Storage;\n  constructor() {\n    this.storage = window.localStorage;\n  }\n\n  set(key: string, value: any) {\n    if(!this.storage) {\n      alert('Local storage not supported by your browser.');\n      return false;\n    } else {\n      this.storage.setItem(key, JSON.stringify(value));\n      return true;\n    }\n  }\n\n  get(key: string): any {\n    if (this.storage) {\n      return JSON.parse(this.storage.getItem(key) || '{}');\n    }\n    return null;\n  }\n\n  remove(key: string): boolean {\n    if (this.storage) {\n      this.storage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n\n  clear(): boolean {\n    if (this.storage) {\n      this.storage.clear();\n      return true;\n    }\n    return false;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAA;IACE,IAAI,CAACC,OAAO,GAAGC,MAAM,CAACC,YAAY;EACpC;EAEAC,GAAGA,CAACC,GAAW,EAAEC,KAAU;IACzB,IAAG,CAAC,IAAI,CAACL,OAAO,EAAE;MAChBM,KAAK,CAAC,8CAA8C,CAAC;MACrD,OAAO,KAAK;KACb,MAAM;MACL,IAAI,CAACN,OAAO,CAACO,OAAO,CAACH,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;MAChD,OAAO,IAAI;;EAEf;EAEAK,GAAGA,CAACN,GAAW;IACb,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChB,OAAOQ,IAAI,CAACG,KAAK,CAAC,IAAI,CAACX,OAAO,CAACY,OAAO,CAACR,GAAG,CAAC,IAAI,IAAI,CAAC;;IAEtD,OAAO,IAAI;EACb;EAEAS,MAAMA,CAACT,GAAW;IAChB,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACc,UAAU,CAACV,GAAG,CAAC;MAC5B,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAW,KAAKA,CAAA;IACH,IAAI,IAAI,CAACf,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACe,KAAK,EAAE;MACpB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAAC,QAAAC,CAAA,G;qBAtCUlB,mBAAmB;EAAA;EAAA,QAAAmB,EAAA,G;WAAnBnB,mBAAmB;IAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}